<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.noerror.Mapper.bom_mapper">


<!-- BOM 등록여부 확인  -->
<select id="bom_check" resultType="int" parameterType="String">
	SELECT COUNT (*) AS CNT FROM BOM WHERE PRODUCT_CODE = #{PRODUCT_CODE}	
</select>

<!-- BOM 상세보기 -->
<select id="bom_detail" resultType="kr.co.noerror.DTO.bom_DTO" parameterType="String">
<!-- 	SELECT * FROM BOM WHERE C_PRODUCT_CODE = #{pd_code}	 -->
	SELECT * FROM BPI_VIEW WHERE PRODUCT_CODE = #{pd_code} ORDER BY BOM_SEQ_NO 	
	<!--  BOM + PRODUCTS + ITEMS 조인 -->

</select>

<!-- 고유번호 중복체크  -->
<select id="bom_cd_ck" resultType="int" parameterType="String">
<!--     SELECT BOM_NO.NEXTVAL FROM DUAL -->
	SELECT COUNT(*) AS CNT FROM BOM WHERE BOM_CODE = #{code}
</select>

<!-- 부모bomcode 찾기 -->
<select id="select_pidx" resultType="int" parameterType="String">
	SELECT BIDX FROM BOM WHERE BOM_CODE = #{BOM_CODE} AND BOM_LEVEL = 0
</select>


<!-- BOM 등록하기 -->
<!-- <insert id="insert_item" parameterType="java.util.List"> -->
<!-- 	INSERT ALL  -->
<!--   	<foreach collection="list" item="bom"> -->
<!-- 	  INTO BOM  -->
<!-- 		(BIDX, BOM_CODE, PARENT_IDX, C_PRODUCT_CODE, C_ITEM_CODE, -->
<!-- 	     BOM_LEVEL, SEQ_NO, BOM_QTY, UNIT, INSERT_DATE, MODIFY_DATE) -->
<!-- 	   VALUES -->
<!-- 		(BOM_NO.NEXTVAL, #{bom.BOM_CODE}, #{bom.PARENT_IDX, jdbcType=INTEGER}, -->
<!--         #{bom.C_PRODUCT_CODE}, #{bom.C_ITEM_CODE}, -->
<!--         #{bom.BOM_LEVEL}, #{bom.SEQ_NO}, #{bom.BOM_QTY}, #{bom.UNIT}, SYSTIMESTAMP, NULL) -->
<!--     </foreach> -->
<!--      SELECT * FROM DUAL -->
<!-- </insert> -->
<insert id="insert_item" parameterType="kr.co.noerror.DTO.bom_DTO">
    INSERT INTO BOM
    VALUES
    (BOM_NO.NEXTVAL, #{BOM_CODE}, #{PARENT_IDX, jdbcType=INTEGER}, #{PRODUCT_CODE}, #{ITEM_CODE}, #{BOM_LEVEL}, #{BOM_SEQ_NO}, #{BOM_QTY}, #{UNIT}, SYSTIMESTAMP, NULL)
</insert>


<!-- bom 등록제품 전체 개수  -->
<select id="bom_all_ea_sch" resultType="int" parameterType="Map">
	SELECT COUNT(DISTINCT PRODUCT_CODE) AS CNT FROM BPI_VIEW
	<where>
      	<if test="sclass != null">
      	PRODUCT_CLASS2 = #{sclass}
	      	<if test="keyword!= null">
      		AND ( 
				PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR
				PRODUCT_TYPE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_SPEC LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_UNIT LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PD_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				BOM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITM_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'  OR  
				COMPANY_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				COMPANY_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'
				) 
      		</if>
      	</if>
      	<if test="sclass == null and keyword!= null">
     		( 
			PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR
			PRODUCT_TYPE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_SPEC LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_UNIT LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PD_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			BOM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITM_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'  OR  
			COMPANY_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			COMPANY_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'
			) 
     	</if>
      </where>
</select>


<!-- bom 전체 리스트  -->
<select id="bom_all_list_sch" resultType="kr.co.noerror.DTO.bom_DTO" parameterType="Map">
	SELECT *
  	FROM (
	    SELECT *
	    FROM BPI_VIEW b1
	    WHERE BIDX = (
	      SELECT MAX(BIDX)
	      FROM BPI_VIEW b2
	      WHERE b2.PRODUCT_CODE = b1.PRODUCT_CODE
    	)
    	<if test="sclass != null">
      	AND PRODUCT_CLASS2 = #{sclass}
	      	<if test="keyword!= null">
      		AND ( 
				PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR
				PRODUCT_TYPE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_SPEC LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_UNIT LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PD_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				BOM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITM_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'  OR  
				COMPANY_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				COMPANY_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'
				) 
      		</if>
      	</if>
      	<if test="sclass == null and keyword!= null">
     	AND ( 
			PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR
			PRODUCT_TYPE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_SPEC LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_UNIT LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PD_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			BOM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_CLASS1 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_CLASS2 LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITM_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'  OR  
			COMPANY_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			COMPANY_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'
		) 
     	</if>
  )
  ORDER BY BIDX DESC
  OFFSET #{start} ROWS FETCH NEXT #{count} ROWS ONLY
</select>

<delete id="bom_delete"  parameterType="Map">
	DELETE FROM BOM WHERE BOM_CODE = #{BOM_CODE} AND PRODUCT_CODE = #{PRODUCT_CODE}
</delete>

</mapper>