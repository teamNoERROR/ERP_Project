<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.noerror.Mapper.goods_mapper">


<!-- 제품등록시 : 제품유형에 따른 식품분류 선택 -->
<select id="gd_class" resultType="String" parameterType="Map">
	SELECT
	<choose>
	<when test="key == 'pd_lc'">
		DISTINCT PRODUCT_CLASS1 FROM PRODUCTS_CLASS 
	</when>
	<when test="key == 'itm_lc'">
		DISTINCT ITEMS_CLASS1 FROM ITEMS_CLASS 
	</when>
	</choose>
</select>


<!-- 소분류 선택 -->
<select id="sc_class" resultType="String" parameterType="Map">
	SELECT
	<choose>
	<when test="key2 == 'pd_sc'">
		PRODUCT_CLASS2 FROM PRODUCTS_CLASS WHERE PRODUCT_CLASS1 = #{PRODUCT_CLASS1}
	</when>
	<when test="key2 == 'itm_sc'">
		ITEMS_CLASS2 FROM ITEMS_CLASS WHERE ITEMS_CLASS1 = #{ITEMS_CLASS1}
	</when>
	</choose>
</select>



<!-- 완제품 식품분류 목록 출력 -->
<!-- <select id="pd_class_list" resultType="String" parameterType="Map"> -->
<!-- 	SELECT -->
<!-- 	<choose> -->
<!-- 	<when test="key == null"> -->
<!-- 		DISTINCT PRODUCT_CLASS1 FROM PRODUCTS_CLASS  -->
<!-- 	</when> -->
<!-- 	<otherwise> -->
<!-- 		PRODUCT_CLASS2 FROM PRODUCTS_CLASS WHERE PRODUCT_CLASS1 = #{PRODUCT_CLASS1} -->
<!-- 	</otherwise> -->
<!-- 	</choose> -->
<!-- </select> -->



<!-- 상품코드 중복확인 -->
<select id="code_dupl" resultType="int" parameterType="kr.co.noerror.DTO.products_DTO">
	SELECT COUNT(*) AS CNT FROM 
	<choose>
		<when test="PRODUCT_TYPE == 'product' or PRODUCT_TYPE == 'half'">
			PRODUCTS WHERE PRODUCT_CODE = #{PRODUCT_CODE}
		</when>
		<when test="ITEM_TYPE == 'item'">
			ITEMS WHERE ITEM_CODE = #{ITEM_CODE}
		</when>
	</choose>
</select>

<!-- 완제품 등록  -->
<insert id="pd_insert"  parameterType="kr.co.noerror.DTO.products_DTO">
	INSERT INTO PRODUCTS 
	VALUES 
	(PRODUCTS_NO.NEXTVAL, #{PRODUCT_CODE}, #{PRODUCT_NAME}, #{PRODUCT_TYPE}, 
	#{PRODUCT_CLASS1}, #{PRODUCT_CLASS2}, #{PRODUCT_SPEC}, #{PRODUCT_UNIT}, 
	#{PRODUCT_COST}, #{PRODUCT_PRICE}, #{PD_SAFE_STOCK}, 
	#{PD_FILE_NM, jdbcType=CLOB}, #{PD_FILE_RENM, jdbcType=VARCHAR}, #{PD_API_FNM, jdbcType=VARCHAR}, #{PD_IMG_SRC, jdbcType=CLOB}, 
	#{PD_USE_FLAG}, #{PD_EXP_FLAG}, #{PD_MEMO, jdbcType=CLOB}, SYSDATE, NULL)
</insert>

<!-- 부자재 등록  -->
<insert id="itm_insert"  parameterType="kr.co.noerror.DTO.products_DTO">
	INSERT INTO ITEMS 
	VALUES 
	(ITEMS_NO.NEXTVAL, #{ITEM_CODE}, #{ITEM_NAME}, #{ITEM_TYPE}, 
	#{ITEM_CLASS1}, #{ITEM_CLASS2}, #{ITEM_SPEC}, #{ITEM_UNIT}, 
	#{ITEM_COST}, #{ITM_SAFE_STOCK},  
	#{ITM_FILE_NM, jdbcType=CLOB}, #{ITM_FILE_RENM, jdbcType=VARCHAR}, #{ITM_API_FNM, jdbcType=VARCHAR}, #{ITM_IMG_SRC, jdbcType=CLOB}, 
	#{COMPANY_CODE}, #{ITM_USE_FLAG}, #{ITM_EXP_FLAG}, #{ITM_MEMO, jdbcType=CLOB}, SYSDATE, NULL)
</insert>


<!-- 제품 전체 개수(+페이징,검색)  -->
<select id="gd_all_ea_sch" resultType="int" parameterType="Map">
SELECT COUNT(*) FROM
<choose>
  <!-- 완제품 -->
  <when test="type == null or type == 'product'">
    PRODUCTS
      <if test="sclass != null">
       	WHERE PRODUCT_CLASS2 = #{sclass}
      </if>
      <if test="keyword != null">
<!--         WHERE  -->
<!--         <if test="sclass != null">  PRODUCT_CLASS2 = #{sclass} AND</if> -->
<!--         ( -->
<!--           PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PRODUCT_SPEC LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PRODUCT_UNIT LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PD_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' -->
<!--         ) -->
      </if>
  </when>
  
  <!-- 부자재 -->
  <when test="type =='item'">
    ITEMS
   
  </when>
</choose>
</select>



<!-- 제품 전체 리스트  -->
<select id="gd_all_list_sch" resultType="kr.co.noerror.DTO.products_DTO" parameterType="Map">
	SELECT * FROM 
	(SELECT ROWNUM AS rnum, a.* FROM 
	(SELECT * FROM 

<choose>
    <!-- 완제품 -->
  <when test="type == null or type == 'product'">
    PRODUCTS
      <if test="sclass != null">
        WHERE PRODUCT_CLASS2 = #{sclass}
      </if>
      <if test="keyword != null">
<!--         WHERE -->
<!--         <if test="sclass != null">  PRODUCT_CLASS2 = #{sclass} AND</if> -->
<!--         ( -->
<!--           PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PRODUCT_SPEC LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PRODUCT_UNIT LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR -->
<!--           PD_MEMO LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' -->
<!--         ) -->
      </if>
    ORDER BY PIDX DESC ) a
	WHERE ROWNUM &lt;= #{end} )
	WHERE rnum &gt;= #{start}
  </when>


  <!-- 부자재 -->
  <when test="type == 'item'">
    ITEMS
    
    
	ORDER BY IIDX DESC ) a
	WHERE ROWNUM &lt;= #{end} )
	WHERE rnum &gt;= #{start}
  </when>
</choose>
	
</select>








<!-- 제품 상세보기 -->
<select id="pd_one_detail" resultType="kr.co.noerror.DTO.products_DTO" parameterType="Map">
	SELECT * FROM 
	<choose>
		<when test="type=='product' or type==null">
		PRODUCTS WHERE PRODUCT_CODE = #{PRODUCT_CODE}
		</when>
		<when test="type=='item'">
		ITEMS WHERE ITEM_CODE = #{ITEM_CODE}
		</when>
	</choose>
</select>








<!-- 제품삭제 -->
<delete id="pd_delete"  parameterType="Map">
	DELETE FROM 
	<choose>
		<when test="type=='product'">
		PRODUCTS WHERE PIDX = #{PIDX, jdbcType=INTEGER} AND PRODUCT_CODE = #{PRODUCT_CODE, jdbcType=VARCHAR}
		</when>
		<when test="type=='item'">
		ITEMS WHERE IIDX = #{IIDX, jdbcType=INTEGER} AND ITEM_CODE = #{ITEM_CODE, jdbcType=VARCHAR}
		</when>
	</choose>
</delete>


<select id="lclass_ck" resultType="String" parameterType="String">
	SELECT PRODUCT_CLASS1 FROM PRODUCTS_CLASS WHERE PRODUCT_CLASS2 = #{PRODUCT_CLASS2}
</select>


</mapper>