<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.noerror.Mapper.goods_mapper">


<!-- 제품등록시 : 제품유형에 따른 식품분류 선택 -->
<select id="gd_class" resultType="String" parameterType="Map">
	SELECT
	<choose>
	<when test="key == 'pd_lc'">
		DISTINCT PRODUCT_CLASS1 FROM PRODUCTS_CLASS 
	</when>
	<when test="key == 'itm_lc'">
		DISTINCT ITEMS_CLASS1 FROM ITEMS_CLASS 
	</when>
	</choose>
</select>


<!-- 소분류 선택 -->
<select id="sc_class" resultType="String" parameterType="Map">
	SELECT
	<choose>
	<when test="key2 == 'pd_sc'">
		PRODUCT_CLASS2 FROM PRODUCTS_CLASS WHERE PRODUCT_CLASS1 = #{PRODUCT_CLASS1, jdbcType=VARCHAR}
	</when>
	<when test="key2 == 'itm_sc'">
		ITEMS_CLASS2 FROM ITEMS_CLASS WHERE ITEMS_CLASS1 = #{ITEMS_CLASS1, jdbcType=VARCHAR}
	</when>
	</choose>
</select>


<!-- 상품코드 중복확인 -->
<select id="code_dupl_gd" resultType="int" parameterType="kr.co.noerror.DTO.products_DTO">
	SELECT COUNT(*) AS CNT FROM 
	<choose>
		<when test="PRODUCT_TYPE == 'product' or PRODUCT_TYPE == 'half'">
			PRODUCTS WHERE PRODUCT_CODE = #{PRODUCT_CODE}
		</when>
		<when test="ITEM_TYPE == 'item'">
			ITEMS WHERE ITEM_CODE = #{ITEM_CODE}
		</when>
	</choose>
</select>


<!-- 완제품 등록  -->
<insert id="pd_insert"  parameterType="kr.co.noerror.DTO.products_DTO">
	INSERT INTO PRODUCTS 
	VALUES 
	(PRODUCTS_NO.NEXTVAL, #{PRODUCT_CODE}, #{PRODUCT_NAME}, #{PRODUCT_TYPE}, 
	#{PRODUCT_CLASS1}, #{PRODUCT_CLASS2}, #{PRODUCT_SPEC}, #{PRODUCT_UNIT}, 
	#{PRODUCT_COST}, #{PRODUCT_PRICE}, #{PD_SAFE_STOCK, jdbcType=INTEGER}, 
	#{PD_FILE_NM, jdbcType=CLOB}, #{PD_FILE_RENM, jdbcType=VARCHAR}, #{PD_API_FNM, jdbcType=VARCHAR}, 
	#{PD_USE_FLAG}, #{PD_EXP_FLAG}, #{PD_MEMO, jdbcType=CLOB}, SYSTIMESTAMP, NULL)
</insert>


<!-- 부자재 등록  -->
<insert id="itm_insert"  parameterType="kr.co.noerror.DTO.products_DTO">
	INSERT INTO ITEMS 
	VALUES 
	(ITEMS_NO.NEXTVAL, #{ITEM_CODE}, #{ITEM_NAME}, #{ITEM_TYPE}, 
	#{ITEM_CLASS1}, #{ITEM_CLASS2}, #{ITEM_SPEC}, #{ITEM_UNIT}, 
	#{ITEM_COST}, #{ITM_SAFE_STOCK, jdbcType=VARCHAR},  
	#{ITM_FILE_NM, jdbcType=VARCHAR}, #{ITM_FILE_RENM, jdbcType=VARCHAR}, #{ITM_API_FNM, jdbcType=VARCHAR}, 
	#{COMPANY_CODE}, #{ITM_USE_FLAG}, #{ITM_EXP_FLAG}, #{ITM_MEMO, jdbcType=CLOB}, SYSTIMESTAMP, NULL)
</insert>


<!-- 제품 전체 개수(+페이징,검색)  -->
<select id="gd_all_ea_sch" resultType="int" parameterType="Map">
SELECT COUNT(*) AS CNT FROM 
<choose>
  <!-- 완제품 -->
  <when test="type == null or type == 'product'">
    PRODUCTS
     <where>
      	<if test="sclass != null">
      	PRODUCT_CLASS2 = #{sclass}
	      	<if test="keyword!= null">
      		AND ( 
				PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%'
				) 
      		</if>
      	</if>
      	<if test="sclass == null and keyword!= null">
     		( 
			PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
			) 
   		</if>
      </where>
  	</when>
  
  <!-- 부자재 -->
  <when test="type =='item'">
   ITM_COMP_VIEW
   <where>
      	<if test="sclass != null">
      	ITEM_CLASS2 = #{sclass}
	      	<if test="keyword!= null">
      		AND ( 
				ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
				) 
      		</if>
      	</if>
      	<if test="sclass == null and keyword!= null">
     		( 
			ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
			ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
			) 
   		</if>
      </where>
  </when>
</choose>
</select>


<!-- 제품 전체 리스트  -->
<select id="gd_all_list_sch" resultType="kr.co.noerror.DTO.products_DTO" parameterType="Map">
	SELECT * FROM 
	(SELECT ROWNUM AS rnum, a.* FROM 
	(
	<choose>
	    <!-- 완제품 -->
	 	<when test="type == null or type == 'product'">
	   	SELECT * FROM PRODUCTS
	      <where>
	      	<if test="sclass != null">
	      	PRODUCT_CLASS2 = #{sclass}
		      	<if test="keyword!= null">
	      		AND ( 
					PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
					PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
					) 
	      		</if>
	      	</if>
	      	<if test="sclass == null and keyword!= null">
      			( 
				PRODUCT_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				PRODUCT_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
				) 
      		</if>
	      </where>
	    ORDER BY PIDX DESC 
	  	</when>


  		<!-- 부자재 -->
	  	<when test="type == 'item'">
	    SELECT * FROM ITM_COMP_VIEW
	    	<where>
	      	<if test="sclass != null">
	      	ITEM_CLASS2 = #{sclass}
		      	<if test="keyword!= null">
	      		AND ( 
					ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
					ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
					) 
	      		</if>
	      	</if>
	      	<if test="sclass == null and keyword!= null">
      			( 
				ITEM_CODE LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' OR 
				ITEM_NAME LIKE '%'||#{keyword, jdbcType=VARCHAR}||'%' 
				) 
      		</if>
	      </where>
		ORDER BY IIDX DESC 
	  </when>
	</choose>
	) a
	WHERE ROWNUM &lt;= #{end} )
	WHERE rnum &gt;= #{start}
	
</select>


<!-- 제품 상세보기 -->
<select id="pd_one_detail" resultType="kr.co.noerror.DTO.products_DTO" parameterType="Map">
	SELECT * FROM 
	<choose>
		<when test="PRODUCT_TYPE != null and (PRODUCT_TYPE.equals('product') or PRODUCT_TYPE.equals('half'))">
		PRODUCTS WHERE PRODUCT_CODE = #{PRODUCT_CODE, jdbcType=VARCHAR}
		</when>
		<when test="ITEM_TYPE != null and ITEM_TYPE.equals('item')">
		ITM_COMP_VIEW WHERE ITEM_CODE = #{ITEM_CODE, jdbcType=VARCHAR}
		</when>
	</choose>
</select>




<!-- cdn 이미지 url 가져오기 -->
<select id="imgs_attach" resultType="String">
	SELECT FILE_RENM FROM PRODUCTS WHERE PD_FILE_RENM = #{filenm}
</select>



<!-- 제품삭제 -->
<delete id="pd_delete"  parameterType="Map">
	DELETE FROM 
	<choose>
		<when test="type=='product'">
		PRODUCTS WHERE PIDX = #{PIDX, jdbcType=INTEGER} AND PRODUCT_CODE = #{PRODUCT_CODE, jdbcType=VARCHAR}
		</when>
		<when test="type=='item'">
		ITEMS WHERE IIDX = #{IIDX, jdbcType=INTEGER} AND ITEM_CODE = #{ITEM_CODE, jdbcType=VARCHAR}
		</when>
	</choose>
</delete>


<!-- 선택된 대분류항목 가져오기 -->
<select id="lclass_ck" resultType="String" parameterType="Map">
	
	<choose>
	<when test="key == 'pd_sc'">
<!-- 	<when test="key.equals('pd_sc')"> -->
	SELECT PRODUCT_CLASS1 FROM PRODUCTS_CLASS WHERE PRODUCT_CLASS2 = #{PRODUCT_CLASS2, jdbcType=VARCHAR}
	</when>
	<when test="key == 'itm_sc'">
<!-- 	<when test="key.equals('itm_sc')"> -->
	SELECT ITEMS_CLASS1 FROM ITEMS_CLASS WHERE ITEMS_CLASS2 = #{ITEMS_CLASS2, jdbcType=VARCHAR}
	</when>
	</choose>
</select>


<!-- 거래처 정보수정 -->
<update id="goods_modify" parameterType="kr.co.noerror.DTO.products_DTO">
	UPDATE 
	<choose>
		<when test="PRODUCT_TYPE =='product' or PRODUCT_TYPE=='half'">
		PRODUCTS SET PRODUCT_NAME = #{PRODUCT_NAME}, PRODUCT_CLASS1 = #{PRODUCT_CLASS1}, PRODUCT_CLASS2 = #{PRODUCT_CLASS2},
		PRODUCT_SPEC = #{PRODUCT_SPEC}, PRODUCT_UNIT = #{PRODUCT_UNIT}, PRODUCT_COST=#{PRODUCT_COST}, PRODUCT_PRICE = #{PRODUCT_PRICE}, PD_SAFE_STOCK = #{PD_SAFE_STOCK, jdbcType=INTEGER},
		<if test="PD_FILE_NM != null and PD_FILE_RENM != null and PD_API_FNM != null">
		PD_FILE_NM = #{PD_FILE_NM, jdbcType=VARCHAR}, PD_FILE_RENM = #{PD_FILE_RENM, jdbcType=VARCHAR}, PD_API_FNM = #{PD_API_FNM, jdbcType=VARCHAR},
		</if>
		PD_USE_FLAG = #{PD_USE_FLAG}, PD_EXP_FLAG = #{PD_EXP_FLAG}, 
		PD_MEMO = #{PD_MEMO, jdbcType=CLOB}, PD_MODIFY_DATE = SYSTIMESTAMP 
		WHERE PIDX = #{PIDX} AND PRODUCT_CODE = #{PRODUCT_CODE}
		</when>
		
		<when test="ITEM_TYPE=='item'">
		ITEMS SET ITEM_NAME = #{ITEM_NAME}, ITEM_CLASS1 = #{ITEM_CLASS1}, ITEM_CLASS2 = #{ITEM_CLASS2},
		ITEM_SPEC = #{ITEM_SPEC}, ITEM_UNIT = #{ITEM_UNIT}, ITEM_COST=#{ITEM_COST}, ITM_SAFE_STOCK = #{ITM_SAFE_STOCK, jdbcType=INTEGER},
		<if test="ITM_FILE_NM != null and ITM_FILE_RENM != null and ITM_API_FNM != null">
		ITM_FILE_NM = #{ITM_FILE_NM, jdbcType=VARCHAR}, ITM_FILE_RENM = #{ITM_FILE_RENM, jdbcType=VARCHAR}, ITM_API_FNM = #{ITM_API_FNM, jdbcType=VARCHAR},
		</if>
		COMPANY_CODE = #{COMPANY_CODE}, ITM_USE_FLAG = #{ITM_USE_FLAG}, ITM_EXP_FLAG = #{ITM_EXP_FLAG}, 
		ITM_MEMO = #{ITM_MEMO, jdbcType=CLOB}, ITM_MODIFY_DATE = SYSTIMESTAMP 
		WHERE IIDX = #{IIDX} AND ITEM_CODE = #{ITEM_CODE}
		</when>
	</choose>
</update>

</mapper>