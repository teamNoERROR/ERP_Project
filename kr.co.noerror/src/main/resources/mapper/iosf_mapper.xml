<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.iosf_mapper">


<!-- 창고 이동 -->
<insert id="IOSF_warehouse_move" parameterType="map">
   <if test="wh_type == 'mt'">
    INSERT INTO WAREHOUSE_MATERIAL (
        WMT_IDX,
        WMT_CODE,
        WH_CODE,
        INBOUND_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        MT_INSERT_DATE,
        MT_MODIFY_DATE,
        MOVE_TYPE,
        INV_LOT 
    ) VALUES (
   	    MT_WAREHOUSE_NO.NEXTVAL,
   	    'WMT-' || LPAD(PCH_ITMWH_NO.NEXTVAL, 5, '0'),
        #{wh_code},
        #{inbound_code, jdbcType=VARCHAR},
        #{product_code},
        #{pd_qty},
        '출고',
        #{employee_code},
        SYSTIMESTAMP,
        NULL,
        NULL,
 		#{inv_lot}
    )
   </if>
   
   <if test="wh_type == 'fs'">
  INSERT INTO WAREHOUSE_FINISH (
        WFS_IDX,
        WFS_CODE,
        WH_CODE,
        PLAN_CODE,
        PRODUCT_CODE,
        PD_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        FS_INSERT_DATE,
        FS_MODIFY_DATE,
        MOVE_TYPE,
        INV_LOT
    ) VALUES (
   	    FS_WAREHOUSE_NO.NEXTVAL,
        'WFS-' || LPAD(PLN_PDWH_TRG_NO.NEXTVAL, 5, '0'),
        #{wh_code},
        #{plan_code},
        #{product_code},
        #{pd_qty},
       	'출고',
        #{employee_code},
        SYSTIMESTAMP,
        NULL,
        NULL,
 		#{inv_lot}
     )
   </if>
</insert>



<!-- 이동 후 MOVE_TYPE 변경 -->
<update id="IOSF_warehouse_move_up" parameterType="Map">
UPDATE 
<if test="wh_type == 'mt'">
  WAREHOUSE_MATERIAL
  SET 
  	MOVE_TYPE = '이동'
    <where>
    	WH_CODE = #{wh_code} AND ITEM_CODE = #{product_code} AND WMT_CODE = #{wmt_code} 
    </where>
</if>

<if test="wh_type == 'fs'">
  WAREHOUSE_FINISH
  SET 
  	MOVE_TYPE = '이동'
    <where>
    	WH_CODE = #{wh_code} AND PRODUCT_CODE = #{product_code} AND WFS_CODE = #{wfs_code} 
    </where>
</if>

</update>

<!-- 창고이동(입고) -->
<insert id="IOSF_warehouse_move_in" parameterType="map">
   <if test="wh_type == 'mt'">
    INSERT INTO WAREHOUSE_MATERIAL (
        WMT_IDX,
        WMT_CODE,
        WH_CODE,
        INBOUND_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        MT_INSERT_DATE,
        MT_MODIFY_DATE,
        MOVE_TYPE,
        INV_LOT
    ) VALUES (
   	    MT_WAREHOUSE_NO.NEXTVAL,
   	    'WMT-' || LPAD(PCH_ITMWH_NO.NEXTVAL, 5, '0'),
        #{mv_wh_code},
        #{inbound_code, jdbcType=VARCHAR},
        #{product_code},
        #{pd_qty},
        '입고',
        #{employee_code},
        SYSTIMESTAMP,
        NULL,
        NULL,
        #{inv_lot}
    )
   </if>
   
   <if test="wh_type == 'fs'">
  INSERT INTO WAREHOUSE_FINISH (
        WFS_IDX,
        WFS_CODE,
        WH_CODE,
        PLAN_CODE,
        PRODUCT_CODE,
        PD_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        FS_INSERT_DATE,
        FS_MODIFY_DATE,
        MOVE_TYPE,
        INV_LOT
        
    ) VALUES (
   	    FS_WAREHOUSE_NO.NEXTVAL,
        'WFS-' || LPAD(PLN_PDWH_TRG_NO.NEXTVAL, 5, '0'),
        #{mv_wh_code},
        #{plan_code},
        #{product_code},
        #{pd_qty},
       	'입고',
        #{employee_code},
        SYSTIMESTAMP,
        NULL,
        NULL,
        #{inv_lot}
    )
   </if>
</insert>

<!-- 창고입고 -->
<!-- 
<insert id="IOSF_warehouse_insert" parameterType="map">
   <if test="wh_type == 'mt'">
    INSERT INTO WAREHOUSE_MATERIAL (
        WMT_IDX,
        WMT_CODE,
        WH_CODE,
        INBOUND_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        MT_INSERT_DATE,
        MT_MODIFY_DATE
    ) VALUES (
   	    MT_WAREHOUSE_NO.NEXTVAL,
   	    'WMT-' || LPAD(PCH_ITMWH_NO.NEXTVAL, 5, '0'),
        #{mv_wh_code},
        #{inbound_code, jdbcType=VARCHAR},
        #{product_code},
        #{pd_qty},
        '입고',
        #{employee_code},
        SYSTIMESTAMP,
        NULL
    )
   </if>
   
   <if test="wh_type == 'fs'">
  INSERT INTO WAREHOUSE_FINISH (
        WFS_IDX,
        WFS_CODE,
        WH_CODE,
        PLAN_CODE,
        PRODUCT_CODE,
        PD_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        FS_INSERT_DATE,
        FS_MODIFY_DATE
        
    ) VALUES (
   	    FS_WAREHOUSE_NO.NEXTVAL,
        'WFS-' || LPAD(PLN_PDWH_TRG_NO.NEXTVAL, 5, '0'),
        #{mv_wh_code},
        #{plan_code},
        #{product_code},
        #{pd_qty},
       	'입고',
        #{employee_code},
        SYSTIMESTAMP,
        NULL
    )
   </if>
</insert>
 -->



<update id="IOSF_modify_warehouse" parameterType="map">
<if test="wh_type == 'in'">
  UPDATE WAREHOUSE_INBOUND
  SET 
  	WH_CODE = #{iosf_dto.wh_code},
    INBOUND_CODE = #{iosf_dto.inbound_code},
    ITEM_CODE = #{iosf_dto.item_code},
    INBOUND_DATE = SYSTIMESTAMP
    <where>
    	INBOUND_CODE = #{iosf_dto.inbound_code}
    </where>
</if>

<if test="wh_type == 'mt'">
    UPDATE WAREHOUSE_MATERIAL
    SET 
      WMT_CODE = #{iosf_dto.material_code},
      WH_CODE = #{iosf_dto.wh_code},
      IN_CODE = #{iosf_dto.inbound_code},
      ITEM_CODE = #{iosf_dto.item_code},
      COMPANY_CODE = #{iosf_dto.client_code},
      MT_INSERT_DATE = SYSDATE  <!-- 날짜 갱신 시 필요하면 -->
    WHERE WMT_ID = #{iosf_dto.win_idx}
  </if>

</update>


<!-- 창고별 제품 리스트 -->
<select id="IOSF_select_wh_list" parameterType="map" resultType="kr.co.noerror.DTO.IOSF_DTO">
<choose>
<when test="wh_type == 'mt'">
<!--   <![CDATA[ -->
SELECT * FROM (
    SELECT ROWNUM AS RN, A.*
    FROM (
        SELECT 
            WMT.WMT_IDX AS win_idx,
            WMT.WMT_CODE AS material_code,
            WMT.WH_CODE,
            WMT.INBOUND_CODE,
            WMT.ITEM_CODE,
            WMT.ITEM_QTY,
            WMT.CHANGE_TYPE,
            WMT.MOVE_TYPE,
            WMT.EMPLOYEE_CODE,
            WMT.MT_INSERT_DATE AS material_date,
			WMT.INV_LOT,

			WH.WH_NAME,
			ITM.ITEM_NAME,
			ITM.COMPANY_CODE AS client_code,
			ITM.COMPANY_NAME AS client_name,
			ITM.ITEM_CLASS1 AS category_main,
			ITM.ITEM_CLASS2 AS category_sub,
            EMP.ENAME AS EMP_NAME,
            <!-- 창고별 상품별 현재 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WM2.CHANGE_TYPE = '입고' THEN WM2.ITEM_QTY
                        WHEN WM2.CHANGE_TYPE = '출고' THEN -WM2.ITEM_QTY
                        WHEN WM2.CHANGE_TYPE = '수동조정' THEN WM2.ITEM_QTY
                        WHEN WM2.CHANGE_TYPE = '출고완료' THEN -WM2.ITEM_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_MATERIAL WM2
                WHERE WM2.ITEM_CODE = WMT.ITEM_CODE
                  AND TRIM(WM2.WH_CODE) = TRIM(WMT.WH_CODE)
            ) AS CURRENT_QTY,
            
 			<!-- 상품별 전체 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WM3.CHANGE_TYPE = '입고' THEN WM3.ITEM_QTY
                        WHEN WM3.CHANGE_TYPE = '출고' THEN -WM3.ITEM_QTY
                        WHEN WM3.CHANGE_TYPE = '수동조정' THEN WM3.ITEM_QTY
                        WHEN WM3.CHANGE_TYPE = '출고완료' THEN -WM3.ITEM_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_MATERIAL WM3
                WHERE WM3.ITEM_CODE = WMT.ITEM_CODE
            ) AS TOTAL_CURRENT_QTY

        FROM WAREHOUSE_MATERIAL WMT
        LEFT JOIN ITM_COMP_VIEW ITM ON WMT.ITEM_CODE = ITM.ITEM_CODE
        LEFT JOIN WAREHOUSE WH ON TRIM(WMT.WH_CODE) = TRIM(WH.WH_CODE)
        LEFT JOIN EMPLOYEE2 EMP ON WMT.EMPLOYEE_CODE = EMP.ECODE
        ORDER BY WMT.WMT_IDX DESC
  ) A
    WHERE ROWNUM &lt;= #{startIndex} + #{pageSize} 
)
WHERE RN &gt;= #{startIndex}
<!--  ]]>  -->
  </when>
  
  <!-- 완제품 창고  -->
  <when test="wh_type == 'fs'">
<!--   <![CDATA[ -->
<!-- SELECT * -->
<!-- FROM ( -->
<!--   SELECT A.*, ROWNUM AS RNUM -->
<!--   FROM ( -->
<!--     SELECT -->
<!--       fs.WFS_IDX AS wfs_idx, -->
<!--       fs.WFS_CODE AS wfs_code, -->
<!--       fs.WH_CODE AS wh_code, -->
<!--       fs.PLAN_CODE AS plan_code, -->
<!--       fs.PD_QTY AS pd_qty, -->
<!--       fs.CHANGE_TYPE AS change_type, -->
<!--       fs.EMPLOYEE_CODE AS employee_code, -->
<!--       fs.FS_INSERT_DATE AS fs_insert, -->
<!--       w.WH_NAME AS wh_name, -->
<!--       pd.pidx, -->
<!--       pd.product_code, -->
<!--       pd.product_name, -->
<!--       emp.ename AS emp_name -->
<!--     FROM -->
<!--       WAREHOUSE_FINISH fs -->
<!--     LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE) -->
<!--     LEFT JOIN PRODUCTS pd ON fs.PRODUCT_CODE = pd.PRODUCT_CODE -->
<!--     LEFT JOIN EMPLOYEE2 emp ON fs.EMPLOYEE_CODE = emp.ECODE -->
<!--     ORDER BY fs.WFS_IDX DESC -->
<!--   ) A -->
<!--   WHERE ROWNUM <= #{startIndex} + #{pageSize} -->
<!-- ) -->
<!-- WHERE RNUM > #{startIndex} -->
<!-- ]]> -->
SELECT * FROM (
    SELECT ROWNUM AS RN, A.*
    FROM (
        SELECT 
            WFS.WFS_IDX ,
            WFS.WFS_CODE,
            WFS.PRODUCT_CODE,
            WFS.WH_CODE,
            WH.WH_NAME,
            WFS.CHANGE_TYPE,
            WFS.MOVE_TYPE,
            WFS.PLAN_CODE,
            WFS.PD_QTY,
            WFS.EMPLOYEE_CODE,
            WFS.FS_INSERT_DATE AS fs_insert,
            PD.PIDX,
            PD.PRODUCT_NAME ,
            EMP.ENAME AS EMP_NAME,
            WFS.INV_LOT,
            <!-- 창고별 현재 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WF2.CHANGE_TYPE = '입고' THEN WF2.PD_QTY
                        WHEN WF2.CHANGE_TYPE = '출고' THEN -WF2.PD_QTY
                        WHEN WF2.CHANGE_TYPE = '수동조정' THEN WF2.PD_QTY
                        WHEN WF2.CHANGE_TYPE = '출고완료' THEN -WF2.PD_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_FINISH WF2
                WHERE WF2.PRODUCT_CODE = WFS.PRODUCT_CODE
                  AND TRIM(WF2.WH_CODE) = TRIM(WFS.WH_CODE)
            ) AS CURRENT_QTY,

            <!-- 상품별 전체 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WF3.CHANGE_TYPE = '입고' THEN WF3.PD_QTY
                        WHEN WF3.CHANGE_TYPE = '출고' THEN -WF3.PD_QTY
                        WHEN WF3.CHANGE_TYPE = '수동조정' THEN WF3.PD_QTY
                        WHEN WF3.CHANGE_TYPE = '출고완료' THEN -WF3.PD_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_FINISH WF3
                WHERE WF3.PRODUCT_CODE = WFS.PRODUCT_CODE
            ) AS TOTAL_CURRENT_QTY

        FROM WAREHOUSE_FINISH WFS
        LEFT JOIN PRODUCTS PD ON WFS.PRODUCT_CODE = PD.PRODUCT_CODE
        LEFT JOIN WAREHOUSE WH ON TRIM(WFS.WH_CODE) = TRIM(WH.WH_CODE)
        LEFT JOIN EMPLOYEE2 EMP ON WFS.EMPLOYEE_CODE = EMP.ECODE
        ORDER BY WFS.WFS_IDX DESC
    ) A
    WHERE ROWNUM &lt;= #{startIndex} + #{pageSize} 
)
WHERE RN &gt;= #{startIndex}
  
</when>
    <otherwise>
      SELECT 1 FROM DUAL 
      <!-- wh_type이 없거나 잘못된 경우 -->
    </otherwise>
  </choose>
</select>



<!-- 검색 + 페이지네이션 -->
<select id="IOSF_search_whpaged" parameterType="map" resultType="kr.co.noerror.DTO.IOSF_DTO">
  <choose>   
    <!-- 부자재창고 리스트 검색 -->
<when test="wh_type == 'mt'">
<!--   <![CDATA[ -->
SELECT * FROM (
    SELECT ROWNUM AS RN, A.*
    FROM (
        SELECT 
            WMT.WMT_IDX AS win_idx,
            WMT.WMT_CODE AS material_code,
            WMT.WH_CODE,
            WMT.INBOUND_CODE,
            WMT.ITEM_CODE,
            WMT.ITEM_QTY,
            WMT.CHANGE_TYPE,
            WMT.MOVE_TYPE,
            WMT.EMPLOYEE_CODE,
            WMT.MT_INSERT_DATE AS material_date,
			WMT.INV_LOT,
			
			WH.WH_NAME,
			ITM.ITEM_NAME,
			ITM.COMPANY_CODE AS client_code,
			ITM.COMPANY_NAME AS client_name,
			ITM.ITEM_CLASS1 AS category_main,
			ITM.ITEM_CLASS2 AS category_sub,
            EMP.ENAME AS EMP_NAME,
            <!-- 창고별 현재 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WM2.CHANGE_TYPE = '입고' THEN WM2.ITEM_QTY
                        WHEN WM2.CHANGE_TYPE = '출고' THEN -WM2.ITEM_QTY
                        WHEN WM2.CHANGE_TYPE = '수동조정' THEN WM2.ITEM_QTY
                        WHEN WM2.CHANGE_TYPE = '출고완료' THEN -WM2.ITEM_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_MATERIAL WM2
                WHERE WM2.ITEM_CODE = WMT.ITEM_CODE
                  AND TRIM(WM2.WH_CODE) = TRIM(WMT.WH_CODE)
            ) AS CURRENT_QTY,
            
 			<!-- 상품별 전체 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WM3.CHANGE_TYPE = '입고' THEN WM3.ITEM_QTY
                        WHEN WM3.CHANGE_TYPE = '출고' THEN -WM3.ITEM_QTY
                        WHEN WM3.CHANGE_TYPE = '수동조정' THEN WM3.ITEM_QTY
                        WHEN WM3.CHANGE_TYPE = '출고완료' THEN -WM3.ITEM_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_MATERIAL WM3
                WHERE WM3.ITEM_CODE = WMT.ITEM_CODE
            ) AS TOTAL_CURRENT_QTY

        FROM WAREHOUSE_MATERIAL WMT
        LEFT JOIN ITM_COMP_VIEW ITM ON WMT.ITEM_CODE = ITM.ITEM_CODE
        LEFT JOIN WAREHOUSE WH ON TRIM(WMT.WH_CODE) = TRIM(WH.WH_CODE)
        LEFT JOIN EMPLOYEE2 EMP ON WMT.EMPLOYEE_CODE = EMP.ECODE
  <where>
    <if test="wh_name != null">
      	TRIM(WH.WH_NAME) = TRIM(#{wh_name})
      	<if test="m_search!= null">
	      AND (
	      TRIM(WH.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(WH.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      TRIM(ITM.item_code)  LIKE '%' || #{m_search} || '%' OR
	      TRIM(ITM.item_name) LIKE '%' || #{m_search} || '%' 
	      )
     	</if>
    </if>
    <if test="wh_name == null and m_search!= null">
     	(
	      TRIM(WH.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(WH.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      TRIM(ITM.item_code) LIKE '%' || #{m_search} || '%' OR
	      TRIM(ITM.item_name) LIKE '%' || #{m_search} || '%' 
	      )
    </if>
	</where>
	ORDER BY WMT.WMT_IDX DESC
  ) A
    WHERE ROWNUM &lt;= #{startIndex} + #{pageSize} 
)
WHERE RN &gt;= #{startIndex}
<!--       ]]> -->
 
</when>
<!-- 완제품 창고 검색 -->
<when test="wh_type == 'fs'">
<!--   <![CDATA[ -->
SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT 
            WFS.WFS_IDX,
            WFS.WFS_CODE,
            WFS.PRODUCT_CODE,
            WFS.PLAN_CODE,
            WFS.WH_CODE,
            WFS.CHANGE_TYPE,
            WFS.MOVE_TYPE,
            WFS.PD_QTY,
            WFS.EMPLOYEE_CODE,
            WFS.FS_INSERT_DATE AS fs_insert,
            WFS.INV_LOT,
            PD.PIDX,
            PD.PRODUCT_NAME ,
            WH.WH_NAME,
            EMP.ENAME AS EMP_NAME,
            <!-- 창고별 현재 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WF2.CHANGE_TYPE = '입고' THEN WF2.PD_QTY
                        WHEN WF2.CHANGE_TYPE = '출고' THEN -WF2.PD_QTY
                        WHEN WF2.CHANGE_TYPE = '수동조정' THEN WF2.PD_QTY
                        WHEN WF2.CHANGE_TYPE = '출고완료' THEN -WF2.PD_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_FINISH WF2
                WHERE WF2.PRODUCT_CODE = WFS.PRODUCT_CODE
                  AND TRIM(WF2.WH_CODE) = TRIM(WFS.WH_CODE)
            ) AS CURRENT_QTY,

            <!-- 상품별 전체 재고수 --> 
            (SELECT SUM(
                    CASE 
                        WHEN WF3.CHANGE_TYPE = '입고' THEN WF3.PD_QTY
                        WHEN WF3.CHANGE_TYPE = '출고' THEN -WF3.PD_QTY
                        WHEN WF3.CHANGE_TYPE = '수동조정' THEN WF3.PD_QTY
                        WHEN WF3.CHANGE_TYPE = '출고완료' THEN -WF3.PD_QTY
                        ELSE 0
                    END
                )
                FROM WAREHOUSE_FINISH WF3
                WHERE WF3.PRODUCT_CODE = WFS.PRODUCT_CODE
            ) AS TOTAL_CURRENT_QTY

        FROM WAREHOUSE_FINISH WFS
        LEFT JOIN PRODUCTS PD ON WFS.PRODUCT_CODE = PD.PRODUCT_CODE
        LEFT JOIN WAREHOUSE WH ON TRIM(WFS.WH_CODE) = TRIM(WH.WH_CODE)
        LEFT JOIN EMPLOYEE2 EMP ON WFS.EMPLOYEE_CODE = EMP.ECODE
    <where>
    <if test="wh_name != null">
      	TRIM(WH.WH_NAME) = TRIM(#{wh_name})
      	<if test="m_search!= null">
	      AND (
	      TRIM(WH.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(WH.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      TRIM(pd.PRODUCT_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(pd.PRODUCT_NAME) LIKE '%' || #{m_search} || '%' 
	      )
     	</if>
    </if>
    <if test="wh_name == null and m_search!= null">
     	(
	      TRIM(WH.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(WH.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      TRIM(pd.PRODUCT_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(pd.PRODUCT_NAME) LIKE '%' || #{m_search} || '%' 
	      )
     	
    </if>
	</where>
    ORDER BY WFS.WFS_IDX DESC
  ) A
  WHERE ROWNUM &lt;= #{startIndex} + #{pageSize}
)
WHERE RNUM &gt; #{startIndex}
<!--   ]]> -->
  </when>

    <otherwise>
      SELECT 1 FROM DUAL
    </otherwise>
  </choose>
</select>
  
<!-- 전체 창고 수 -->
<select id="IOSF_getTotalCount" parameterType="string" resultType="int">
      <if test="wh_type == 'mt'">
	      SELECT COUNT(*) FROM WAREHOUSE_MATERIAL 
      </if>
      <if test="wh_type == 'fs'">
	      SELECT COUNT(*) FROM WAREHOUSE_FINISH 
      </if>
</select>

<!-- 상세정보 -->
<select id="IOSF_wh_SelectWithCode" parameterType="map" resultType="kr.co.noerror.DTO.IOSF_DTO">
  <if test="wh_type == 'in'">
  SELECT 
  inb.WH_CODE AS wh_code,
  inb.ITEM_QTY AS item_qty,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  inb.INBOUND_CODE AS inbound_code,

  inb.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,

  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,

  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_INB inb
LEFT JOIN WAREHOUSE w ON TRIM(inb.WH_CODE) = TRIM(w.WH_CODE)
LEFT JOIN INBOUND ib ON inb.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON inb.ITEM_CODE = i.ITEM_CODE
WHERE inb.INBOUND_CODE = #{code}
  </if>
  
  <if test="wh_type == 'mt'">
    SELECT 
  mt.WH_CODE AS wh_code,
  mt.ITEM_QTY AS item_qty,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  mt.INBOUND_CODE AS inbound_code,

  mt.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,

  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,


  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_MATERIAL mt
LEFT JOIN WAREHOUSE w ON TRIM(mt.WH_CODE) = TRIM(w.WH_CODE)
JOIN INBOUND ib ON mt.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON mt.ITEM_CODE = i.ITEM_CODE
WHERE mt.WMT_CODE = #{code}
  </if>
  
  <if test="wh_type == 'fs'">
    SELECT 
  fs.WH_CODE AS wh_code,
  fs.ITEM_QTY AS item_qty,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  fs.INBOUND_CODE AS inbound_code,

  fs.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,
  
  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,


  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_FINISH fs
LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE)
LEFT JOIN INBOUND ib ON fs.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON fs.ITEM_CODE = i.ITEM_CODE
WHERE fs.WFS_CODE = #{code}
  </if>
</select>

<!-- 삭제 -->
<delete id="IOSF_delete_warehouses" parameterType="map">
	<if test="wh_type == 'in'">
	  	DELETE FROM WAREHOUSE_INBOUND WHERE INBOUND_CODE = #{code}
	</if>
	
  <if test="wh_type == 'mt'">
      DELETE FROM WAREHOUSE_MATERIAL WHERE WMT_CODE = #{code}
  </if>
  
  <if test="wh_type == 'fs'">
      DELETE FROM WAREHOUSE_FINISH WHERE WFS_CODE = #{code}
  </if>
  
  <if test="wh_type == 'out'">
      DELETE FROM WAREHOUSE_OUT WHERE OUT_CODE = #{code}
  </if>
  
 </delete>
 
 <!-- 검색된 개시물 총 갯수 -->
 <select id="IOSF_searchTotal" parameterType="map" resultType="int">
      
   <choose>
    <when test="wh_type == 'mt'">
     SELECT COUNT(*)
		FROM WAREHOUSE_MATERIAL mt
		LEFT JOIN WAREHOUSE w ON TRIM(mt.WH_CODE) = TRIM(w.WH_CODE)
		LEFT JOIN ITM_COMP_VIEW i ON mt.ITEM_CODE = i.ITEM_CODE
		LEFT JOIN INBOUND ib ON mt.INBOUND_CODE = ib.INBOUND_CODE
		<where>
	    <if test="wh_name != null">
	      	TRIM(w.WH_NAME) = TRIM(#{fs_wh_name})
	      	<if test="m_search!= null">
		      	AND (
		      	TRIM(w.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      	  	TRIM(w.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      		TRIM(i.item_code) LIKE '%' || #{m_search} || '%' OR
	      		TRIM(i.item_name) LIKE '%' || #{m_search} || '%' 
		      ) 
	     	</if>
	    </if>
	    <if test="wh_name == null and m_search!= null">
	    	(
	      TRIM(w.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(w.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      TRIM(i.item_code) LIKE '%' || #{m_search} || '%' OR
	      TRIM(i.item_name) LIKE '%' || #{m_search} || '%' 
	      )
	    	
	    </if>
		</where>
    </when>
    
    <when test="wh_type == 'fs'">
       SELECT COUNT(*)	    
	FROM WAREHOUSE_FINISH fs
    LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE)
    LEFT JOIN PRODUCTS pd ON fs.PRODUCT_CODE = pd.PRODUCT_CODE
    LEFT JOIN EMPLOYEE2 emp ON fs.EMPLOYEE_CODE = emp.ECODE
		<where>
	    <if test="fs_wh_name != null">
	      	TRIM(w.WH_NAME) = TRIM(#{fs_wh_name})
	      	<if test="m_search!= null">
		      	AND (
		      	TRIM(w.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      	  	TRIM(w.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      		TRIM(pd.PRODUCT_CODE) LIKE '%' || #{m_search} || '%' OR
	      		TRIM(pd.PRODUCT_NAME) LIKE '%' || #{m_search} || '%' 
		      ) 
	     	</if>
	    </if>
	    <if test="fs_wh_name == null and m_search!= null">
	    	(
	      TRIM(w.WH_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(w.WH_NAME) LIKE '%' || #{m_search} || '%' OR
	      TRIM(pd.PRODUCT_CODE) LIKE '%' || #{m_search} || '%' OR
	      TRIM(pd.PRODUCT_NAME) LIKE '%' || #{m_search} || '%' 
	      )
	    	
	    </if>
		</where>
    </when>
    <otherwise>
      SELECT 0 FROM DUAL -- 혹은 기본값 처리
    </otherwise>
  </choose>
  </select>
 
 <update id="IOSF_out_update" parameterType="map">
  UPDATE WAREHOUSE_OUT
  SET
    OUT_STATUS = '${outStatus}',
    OUT_UPDATE_DATE = SYSTIMESTAMP
  WHERE WOUT_CODE = '${out_code}' 
 </update>
 
 <!-- 
 <insert id="IOSF_out_complete" parameterType="map">
 	 INSERT INTO OUTBOUND(
 		OIDX,
        OUTBOUND_CODE,
        WOUT_CODE,
        OUT_INSERT_DATE
        
    ) VALUES (
   	    OUTBOUND_NO.NEXTVAL,
        '${wh_uq}',
        '${out_code}',
        SYSTIMESTAMP
    )
 </insert>
  -->
  
  <!-- 창고별 이름리스트 출력용 -->
<select id="wh_nm_list" resultType="String" parameterType="Map">
	SELECT
	<choose>
	<when test="wh_type == 'fs_wh'">
		TRIM(WH_NAME) FROM WAREHOUSE
		WHERE WH_TYPE = '완제품창고'
		ORDER BY WH_INSERT_DATE
	</when>
	<when test="wh_type == 'mt_wh'">
		TRIM(WH_NAME) FROM WAREHOUSE
		WHERE WH_TYPE = '부자재창고'
		ORDER BY WH_INSERT_DATE
	</when>
	</choose>
</select>


<!-- 재고 수동조정  -->
<insert id="wh_stock_change" parameterType="map">
   <if test="wh_type == 'mt'">
    INSERT INTO WAREHOUSE_MATERIAL (
        WMT_IDX,
        WMT_CODE,
        WH_CODE,
        INBOUND_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        MT_INSERT_DATE,
        MT_MODIFY_DATE,
        MOVE_TYPE,
        INV_LOT
    ) VALUES (
   	    MT_WAREHOUSE_NO.NEXTVAL,
   	    'WMT-' || LPAD(PCH_ITMWH_NO.NEXTVAL, 5, '0'),
        #{mv_wh_code},
        #{inbound_code, jdbcType=VARCHAR},
        #{product_code},
        #{pd_qty},
        #{CHANGE_TYPE},
        #{EMPLOYEE_CODE},
        SYSTIMESTAMP,
        NULL,
        NULL,
        '-'
    )
   </if>
   
   <if test="wh_type == 'fs'">
  INSERT INTO WAREHOUSE_FINISH (
        WFS_IDX,
        WFS_CODE,
        WH_CODE,
        PLAN_CODE,
        PRODUCT_CODE,
        PD_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        FS_INSERT_DATE,
        FS_MODIFY_DATE,
        MOVE_TYPE,
        INV_LOT
    ) VALUES (
   	    FS_WAREHOUSE_NO.NEXTVAL,
        'WFS-' || LPAD(PLN_PDWH_TRG_NO.NEXTVAL, 5, '0'),
        #{WH_CODE},
        #{PLAN_CODE},
        #{PRODUCT_CODE},
        #{PD_QTY},
       	#{CHANGE_TYPE},
        #{EMPLOYEE_CODE},
        SYSTIMESTAMP,
        NULL,
        NULL,
        '-'
    )
   </if>
</insert>



</mapper>