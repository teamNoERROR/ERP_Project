<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.iosf_mapper">

<insert id="IOSF_warehouse_move" parameterType="map">
   <if test="wh_type == 'mt'">
    INSERT INTO WAREHOUSE_MATERIAL (
        WMT_IDX,
        INBOUND_CODE,
        WH_CODE,
        WMT_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        MT_INSERT_DATE
        
    ) VALUES (
   	    MT_WAREHOUSE_NO.NEXTVAL,
        #{inbound_code},
        #{wh_code},
        #{wh_uq, jdbcType=VARCHAR},
        #{item_code},
        #{item_count},
        #{in_status},
        SYSTIMESTAMP
    )
   </if>
   
   <if test="wh_type == 'fs'">
  INSERT INTO WAREHOUSE_FINISH (
        WFS_IDX,
        WFS_CODE,
        WH_CODE,
        PLAN_CODE,
        PRODUCT_CODE,
        PD_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        FS_INSERT_DATE,
        FS_MODIFY_DATE
        
    ) VALUES (
   	    FS_WAREHOUSE_NO.NEXTVAL,
        #{inbound_code},
        #{wh_code},
        #{wh_uq, jdbcType=VARCHAR},
        #{item_code},
        #{item_count},
        #{in_status},
        SYSTIMESTAMP
    )
   </if>
   
   <if test="wh_type == 'out'">
    INSERT INTO WAREHOUSE_OUT (
        WOUT_IDX,
        INBOUND_CODE,
        WH_CODE,
        WOUT_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        OUT_INSERT_DATE
        
    ) VALUES (
   	    OUT_WAREHOUSE_NO.NEXTVAL,
        #{inbound_code},
        #{wh_code},
        #{wh_uq, jdbcType=VARCHAR},
        #{item_code},
        #{item_count},
        #{in_status},
        SYSTIMESTAMP
    )
   </if>
   
</insert>

<insert id="IOSF_save_warehouse" parameterType="map">

<if test="wh_type == 'in'">
 INSERT INTO WAREHOUSE_INB (
        WIN_IDX,
        INBOUND_CODE,
        WH_CODE,
        WIN_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        IN_INSERT_DATE
        
    ) VALUES (
   	    INB_WAREHOUSE_NO.NEXTVAL,
        #{iosf_dto.inbound_code},
        #{iosf_dto.wh_code},
        #{iosf_dto.in_code},
        #{iosf_dto.item_code},
        #{iosf_dto.item_count},
        #{iosf_dto.in_status},
        #{iosf_dto.employee_code},        
        SYSTIMESTAMP
    )
   </if>

<if test="wh_type == 'mt'">
 INSERT INTO WAREHOUSE_MATERIAL (
        WMT_IDX,
        INBOUND_CODE,
        WH_CODE,
        WMT_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        MT_INSERT_DATE
        
    ) VALUES (
   	    MT_WAREHOUSE_NO.NEXTVAL,
        #{iosf_dto.inbound_code},
        #{iosf_dto.wh_code},
        #{iosf_dto.material_code},
        #{iosf_dto.item_code},
        #{iosf_dto.item_count},
        #{iosf_dto.in_status},
        #{iosf_dto.employee_code},            
        SYSTIMESTAMP
    )
   </if>
   
   <if test="wh_type == 'fs'">
  INSERT INTO WAREHOUSE_FINISH (
        WFS_IDX,
        INBOUND_CODE,
        WH_CODE,
        WFS_CODE,
        ITEM_CODE,
        ITEM_QTY,
        CHANGE_TYPE,
        EMPLOYEE_CODE,
        FS_INSERT_DATE
        
    ) VALUES (
   	    FS_WAREHOUSE_NO.NEXTVAL,
        #{iosf_dto.inbound_code},
        #{iosf_dto.wh_code},
        #{iosf_dto.finish_code},
        #{iosf_dto.item_code},
        #{iosf_dto.item_count},
        #{iosf_dto.in_status},
        #{iosf_dto.employee_code},  
        SYSTIMESTAMP
    )
   </if>
</insert>

<update id="IOSF_modify_warehouse" parameterType="map">
<if test="wh_type == 'in'">
  UPDATE WAREHOUSE_INBOUND
  SET 
  	WH_CODE = #{iosf_dto.wh_code},
    INBOUND_CODE = #{iosf_dto.inbound_code},
    ITEM_CODE = #{iosf_dto.item_code},
    INBOUND_DATE = SYSTIMESTAMP
    <where>
    	INBOUND_CODE = #{iosf_dto.inbound_code}
    </where>
</if>

<if test="wh_type == 'mt'">
    UPDATE WAREHOUSE_MATERIAL
    SET 
      WMT_CODE = #{iosf_dto.material_code},
      WH_CODE = #{iosf_dto.wh_code},
      IN_CODE = #{iosf_dto.inbound_code},
      ITEM_CODE = #{iosf_dto.item_code},
      COMPANY_CODE = #{iosf_dto.client_code},
      MT_INSERT_DATE = SYSDATE  <!-- 날짜 갱신 시 필요하면 -->
    WHERE WMT_ID = #{iosf_dto.win_idx}
  </if>

</update>


<!-- 창고별 제품 리스트 -->
<select id="IOSF_select_wh_list" parameterType="map" resultType="kr.co.noerror.DTO.IOSF_DTO">
  <choose>
    <when test="wh_type == 'in'">
      <![CDATA[
 SELECT *
  FROM (
    SELECT A.*, ROWNUM RNUM
    FROM (
      SELECT
        inb.WIN_IDX             AS win_idx,
        inb.WH_CODE             AS wh_code,
        inb.ITEM_QTY            AS item_count,
        inb.CHANGE_TYPE         AS in_change,
        w.WH_NAME               AS wh_name,
        inb.INBOUND_CODE        AS inbound_code,
        w.WH_ADDR1              AS wh_location,

        inb.ITEM_CODE           AS item_code,
        i.ITEM_NAME             AS item_name,
        i.COMPANY_CODE          AS client_code,
        i.COMPANY_NAME          AS client_name,
        i.COM_USE_FLAG          AS use_yn,

        i.ITEM_CLASS1           AS category_main,
        i.ITEM_CLASS2           AS category_sub,

        ib.IN_STATUS            AS in_status,

        TO_CHAR(
          CASE 
            WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
            WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
            ELSE NULL
          END, 'YYYY-MM-DD'
        ) AS inbound_date2,

        TO_CHAR(inb.IN_INSERT_DATE, 'YYYY-MM-DD') AS in_date

      FROM
        WAREHOUSE_INB inb

      LEFT JOIN WAREHOUSE w ON TRIM(inb.WH_CODE) = TRIM(w.WH_CODE)

      LEFT JOIN (
        SELECT INBOUND_CODE, IN_STATUS, INBOUND_DATE, ITEM_CODE
        FROM INBOUND
      ) ib ON inb.INBOUND_CODE = ib.INBOUND_CODE AND inb.ITEM_CODE = ib.ITEM_CODE

      LEFT JOIN (
        SELECT
          ITEM_CODE, ITEM_NAME, ITEM_CLASS1, ITEM_CLASS2,
          COMPANY_CODE, COMPANY_NAME, COM_USE_FLAG
        FROM ITM_COMP_VIEW
      ) i ON inb.ITEM_CODE = i.ITEM_CODE  

      ORDER BY inb.IN_INSERT_DATE DESC
    ) A
    WHERE ROWNUM <= #{startIndex} + #{pageSize}
  )
  WHERE RNUM > #{startIndex}
      ]]>
    </when>
    

<when test="wh_type == 'mt'">
  <![CDATA[
SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT
      mt.WMT_IDX             AS win_idx,
      mt.WH_CODE             AS wh_code,
      mt.WMT_CODE             AS material_code,
      mt.ITEM_QTY            AS item_count,
      mt.CHANGE_TYPE         AS material_change,
      w.WH_NAME               AS wh_name,
      mt.INBOUND_CODE        AS inbound_code,
      w.WH_ADDR1              AS wh_location,

      mt.ITEM_CODE           AS item_code,
      i.ITEM_NAME             AS item_name,
      i.COMPANY_CODE          AS client_code,
      i.COMPANY_NAME          AS client_name,
      i.COM_USE_FLAG          AS use_yn,

      i.ITEM_CLASS1           AS category_main,
      i.ITEM_CLASS2           AS category_sub,
      

      ib.IN_STATUS            AS in_status,

      TO_CHAR(
        CASE 
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
          ELSE NULL
        END, 'YYYY-MM-DD'
      ) AS inbound_date2,

      TO_CHAR(mt.MT_INSERT_DATE, 'YYYY-MM-DD') AS material_date

    FROM
      WAREHOUSE_MATERIAL mt

    LEFT JOIN WAREHOUSE w ON TRIM(mt.WH_CODE) = TRIM(w.WH_CODE)

    LEFT JOIN (
      SELECT INBOUND_CODE, IN_STATUS, INBOUND_DATE, ITEM_CODE
      FROM INBOUND
    ) ib ON mt.INBOUND_CODE = ib.INBOUND_CODE AND ib.ITEM_CODE = mt.ITEM_CODE

    LEFT JOIN (
      SELECT
        ITEM_CODE, ITEM_NAME, ITEM_CLASS1, ITEM_CLASS2,
        COMPANY_CODE, COMPANY_NAME, COM_USE_FLAG
      FROM ITM_COMP_VIEW
    ) i ON mt.ITEM_CODE = i.ITEM_CODE

    ORDER BY mt.MT_INSERT_DATE DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
  ]]>
  </when>
  
  <!-- 완제품 창고  -->
  <when test="wh_type == 'fs'">
  <![CDATA[
SELECT *
FROM (
  SELECT A.*, ROWNUM AS RNUM
  FROM (
    SELECT
      fs.WFS_IDX AS wfs_idx,
      fs.WFS_CODE AS wfs_code,
      fs.WH_CODE AS wh_code,
      fs.PLAN_CODE AS plan_code,
      fs.PD_QTY AS pd_qty,
      fs.CHANGE_TYPE AS change_type,
      fs.EMPLOYEE_CODE AS emp_code,
      fs.FS_INSERT_DATE AS fs_insert,
      w.WH_NAME AS wh_name,
      pld.pd_idx AS pidx,
      pld.product_code,
      pld.product_name,
      pld.ename AS emp_name,
      pld.ecode AS employee_code
    FROM
      WAREHOUSE_FINISH fs
    LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE)
    LEFT JOIN PLAN_DETAIL_VIEW pld 
    	ON ((fs.PLAN_CODE IS NOT NULL 
    		AND fs.PLAN_CODE = pld.PLAN_CODE 
    		AND fs.PRODUCT_CODE = pld.PRODUCT_CODE)
    		OR
    		(fs.PLAN_CODE IS NULL AND fs.PRODUCT_CODE = pld.PRODUCT_CODE))
    ORDER BY fs.FS_INSERT_DATE DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
  ]]>
  
</when>

<when test="wh_type == 'out'">
  <![CDATA[
SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT
      out.WOUT_IDX             AS win_idx,
      out.WH_CODE             AS wh_code,
      out.WOUT_CODE           AS out_code,
      out.ITEM_QTY            AS item_count,
      out.OUT_STATUS          AS out_status,
      out.CHANGE_TYPE         AS out_change,
      w.WH_NAME               AS wh_name,
      out.INBOUND_CODE        AS inbound_code,
      w.WH_ADDR1              AS wh_location,

      out.ITEM_CODE           AS item_code,
      i.ITEM_NAME             AS item_name,
      i.COMPANY_CODE          AS client_code,
      i.COMPANY_NAME          AS client_name,
      i.COM_USE_FLAG          AS use_yn,

      i.ITEM_CLASS1           AS category_main,
      i.ITEM_CLASS2           AS category_sub,
      
      ib.IN_STATUS            AS in_status,

      TO_CHAR(
        CASE 
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
          ELSE NULL
        END, 'YYYY-MM-DD'
      ) AS inbound_date2,

      TO_CHAR(out.OUT_INSERT_DATE, 'YYYY-MM-DD') AS out_date

    FROM
      WAREHOUSE_OUT out

    LEFT JOIN WAREHOUSE w ON TRIM(out.WH_CODE) = TRIM(w.WH_CODE)

    LEFT JOIN (
      SELECT INBOUND_CODE, IN_STATUS, INBOUND_DATE, ITEM_CODE
      FROM INBOUND
    ) ib ON out.INBOUND_CODE = ib.INBOUND_CODE AND ib.ITEM_CODE = out.ITEM_CODE

    LEFT JOIN (
      SELECT
        ITEM_CODE, ITEM_NAME, ITEM_CLASS1, ITEM_CLASS2,
        COMPANY_CODE, COMPANY_NAME, COM_USE_FLAG
      FROM ITM_COMP_VIEW
    ) i ON out.ITEM_CODE = i.ITEM_CODE

    WHERE out.OUT_STATUS = '미출고'

    ORDER BY out.OUT_INSERT_DATE DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
  ]]>
  
</when>

    <otherwise>
      SELECT 1 FROM DUAL -- wh_type이 없거나 잘못된 경우
    </otherwise>
  </choose>
</select>

<!-- 검색 + 페이지네이션 -->
<select id="IOSF_search_whpaged" parameterType="map" resultType="kr.co.noerror.DTO.IOSF_DTO">
  <choose>
    <!-- 입고 검색 -->
    <when test="wh_type == 'in'">
      <![CDATA[
SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT 
      inb.WIN_IDX             AS win_idx,
      inb.WH_CODE             AS wh_code,
      w.WH_NAME               AS wh_name,
      inb.INBOUND_CODE        AS inbound_code,
      inb.ITEM_CODE           AS item_code,
      i.ITEM_NAME             AS item_name,
      i.ITEM_CLASS1           AS category_main,
      i.ITEM_CLASS2           AS category_sub,
      i.COM_USE_FLAG          AS use_yn,
      w.WH_ADDR1              AS wh_location,
      i.COMPANY_CODE          AS client_code,
      i.COMPANY_NAME          AS client_name,
      TO_CHAR(
        CASE 
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
          ELSE NULL
        END, 'YYYY-MM-DD HH24:MI:SS'
      ) AS inbound_date

    FROM WAREHOUSE_INB inb
    LEFT JOIN WAREHOUSE w ON TRIM(inb.WH_CODE) = TRIM(w.WH_CODE)
    LEFT JOIN INBOUND ib ON inb.INBOUND_CODE = ib.INBOUND_CODE AND ib.ITEM_CODE = inb.ITEM_CODE
    LEFT JOIN ITM_COMP_VIEW i ON inb.ITEM_CODE = i.ITEM_CODE

    WHERE 
      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'

    ORDER BY inb.WIN_IDX DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
      ]]>
    </when>

    <!-- 출고 검색 -->
    <!-- 부자재창고 리스트 검색 -->
<when test="wh_type == 'mt'">
  <![CDATA[
    SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT 
      mt.WMT_IDX             AS win_idx,
      mt.WH_CODE             AS wh_code,
      w.WH_NAME               AS wh_name,
      mt.INBOUND_CODE        AS inbound_code,
      mt.ITEM_CODE           AS item_code,
      i.ITEM_NAME             AS item_name,
      i.ITEM_CLASS1           AS category_main,
      i.ITEM_CLASS2           AS category_sub,
      i.COM_USE_FLAG          AS use_yn,
      w.WH_ADDR1              AS wh_location,
      i.COMPANY_CODE          AS client_code,
      i.COMPANY_NAME          AS client_name,
      TO_CHAR(
        CASE 
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
          ELSE NULL
        END, 'YYYY-MM-DD HH24:MI:SS'
      ) AS inbound_date

    FROM WAREHOUSE_MATERIAL mt
    LEFT JOIN WAREHOUSE w ON TRIM(mt.WH_CODE) = TRIM(w.WH_CODE)
    LEFT JOIN INBOUND ib ON mt.INBOUND_CODE = ib.INBOUND_CODE AND ib.ITEM_CODE = mt.ITEM_CODE
    LEFT JOIN ITM_COMP_VIEW i ON mt.ITEM_CODE = i.ITEM_CODE

    WHERE 
      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'

    ORDER BY mt.WMT_IDX DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
      ]]>
 
</when>

<when test="wh_type == 'fs'">
  <![CDATA[
        SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT 
      fs.WMT_IDX             AS win_idx,
      fs.WH_CODE             AS wh_code,
      w.WH_NAME               AS wh_name,
      fs.INBOUND_CODE        AS inbound_code,
      fs.ITEM_CODE           AS item_code,
      i.ITEM_NAME             AS item_name,
      i.ITEM_CLASS1           AS category_main,
      i.ITEM_CLASS2           AS category_sub,
      i.COM_USE_FLAG          AS use_yn,
      w.WH_ADDR1              AS wh_location,
      i.COMPANY_CODE          AS client_code,
      i.COMPANY_NAME          AS client_name,
      TO_CHAR(
        CASE 
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
          ELSE NULL
        END, 'YYYY-MM-DD HH24:MI:SS'
      ) AS inbound_date

    FROM WAREHOUSE_FINISG fs
    LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE)
    LEFT JOIN INBOUND ib ON fs.INBOUND_CODE = ib.INBOUND_CODE AND ib.ITEM_CODE = fs.ITEM_CODE
    LEFT JOIN ITM_COMP_VIEW i ON fs.ITEM_CODE = i.ITEM_CODE

    WHERE 
      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'

    ORDER BY fs.WFS_IDX DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
  ]]>
  </when>
  
  <when test="wh_type == 'out'">
  <![CDATA[
        SELECT *
FROM (
  SELECT A.*, ROWNUM RNUM
  FROM (
    SELECT 
      out.WOUT_IDX             AS win_idx,
      out.WH_CODE             AS wh_code,
      w.WH_NAME               AS wh_name,
      out.INBOUND_CODE        AS inbound_code,
      out.ITEM_CODE           AS item_code,
      i.ITEM_NAME             AS item_name,
      i.ITEM_CLASS1           AS category_main,
      i.ITEM_CLASS2           AS category_sub,
      i.COM_USE_FLAG          AS use_yn,
      w.WH_ADDR1              AS wh_location,
      i.COMPANY_CODE          AS client_code,
      i.COMPANY_NAME          AS client_name,
      TO_CHAR(
        CASE 
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
          WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
          ELSE NULL
        END, 'YYYY-MM-DD HH24:MI:SS'
      ) AS inbound_date

    FROM WAREHOUSE_OUT out
    LEFT JOIN WAREHOUSE w ON TRIM(out.WH_CODE) = TRIM(w.WH_CODE)
    LEFT JOIN INBOUND ib ON out.INBOUND_CODE = ib.INBOUND_CODE AND ib.ITEM_CODE = out.ITEM_CODE
    LEFT JOIN ITM_COMP_VIEW i ON out.ITEM_CODE = i.ITEM_CODE

    WHERE 
      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'

    ORDER BY out.WOUT_IDX DESC
  ) A
  WHERE ROWNUM <= #{startIndex} + #{pageSize}
)
WHERE RNUM > #{startIndex}
  ]]>
  
</when>

    <otherwise>
      SELECT 1 FROM DUAL
    </otherwise>
  </choose>
</select>
  
<!-- 전체 창고 수 -->
<select id="IOSF_getTotalCount" parameterType="string" resultType="int">
      <if test="wh_type == 'in'">
	      SELECT COUNT(*) FROM WAREHOUSE_INB
      </if>
      <if test="wh_type == 'mt'">
	      SELECT COUNT(*) FROM WAREHOUSE_MATERIAL 
      </if>
      <if test="wh_type == 'fs'">
	      SELECT COUNT(*) FROM WAREHOUSE_FINISH 
      </if>
      <if test="wh_type == 'out'">
	      SELECT COUNT(*) FROM WAREHOUSE_OUT WHERE OUT_STATUS = '미출고'
      </if>
</select>

<!-- 상세정보 -->
<select id="IOSF_wh_SelectWithCode" parameterType="map" resultType="kr.co.noerror.DTO.IOSF_DTO">
  <if test="wh_type == 'in'">
  SELECT 
  inb.WH_CODE AS wh_code,
  inb.ITEM_QTY AS item_count,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  inb.INBOUND_CODE AS inbound_code,

  inb.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,

  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,

  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_INB inb
LEFT JOIN WAREHOUSE w ON TRIM(inb.WH_CODE) = TRIM(w.WH_CODE)
LEFT JOIN INBOUND ib ON inb.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON inb.ITEM_CODE = i.ITEM_CODE
WHERE inb.INBOUND_CODE = #{code}
  </if>
  
  <if test="wh_type == 'mt'">
    SELECT 
  mt.WH_CODE AS wh_code,
  mt.ITEM_QTY AS item_count,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  mt.INBOUND_CODE AS inbound_code,

  mt.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,

  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,


  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_MATERIAL mt
LEFT JOIN WAREHOUSE w ON TRIM(mt.WH_CODE) = TRIM(w.WH_CODE)
LEFT JOIN INBOUND ib ON mt.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON mt.ITEM_CODE = i.ITEM_CODE
WHERE mt.WMT_CODE = #{code}
  </if>
  
  <if test="wh_type == 'fs'">
    SELECT 
  fs.WH_CODE AS wh_code,
  fs.ITEM_QTY AS item_count,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  fs.INBOUND_CODE AS inbound_code,

  fs.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,
  
  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,


  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_FINISH fs
LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE)
LEFT JOIN INBOUND ib ON fs.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON fs.ITEM_CODE = i.ITEM_CODE
WHERE fs.WFS_CODE = #{code}
  </if>
  
  <if test="wh_type == 'out'">
    SELECT 
  out.WH_CODE AS wh_code,
  out.ITEM_QTY AS item_count,
  w.WH_NAME AS wh_name,
  w.WH_ADDR1 AS wh_addr1,
  w.WH_ADDR2 AS wh_addr2,
  w.WH_ZIPCODE AS wh_zipcode,
  out.INBOUND_CODE AS inbound_code,

  out.ITEM_CODE AS item_code,
  i.ITEM_NAME AS item_name,
  i.ITEM_CLASS1 AS category_main,
  i.ITEM_CLASS2 AS category_sub,

  i.COM_USE_FLAG AS client_use_yn,
  i.COMPANY_CODE AS client_code,
  i.COMPANY_NAME AS client_name,

  TO_CHAR(
    CASE 
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 10 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD')
      WHEN LENGTH(TRIM(ib.INBOUND_DATE)) = 19 THEN TO_DATE(ib.INBOUND_DATE, 'YYYY-MM-DD HH24:MI:SS')
      ELSE NULL
    END, 'YYYY-MM-DD HH24:MI:SS'
  ) AS inbound_date

FROM WAREHOUSE_OUT out
LEFT JOIN WAREHOUSE w ON TRIM(out.WH_CODE) = TRIM(w.WH_CODE)
LEFT JOIN INBOUND ib ON out.INBOUND_CODE = ib.INBOUND_CODE
LEFT JOIN ITM_COMP_VIEW i ON out.ITEM_CODE = i.ITEM_CODE
WHERE out.WOUT_CODE = #{code}
  </if>
  
</select>

<!-- 삭제 -->
<delete id="IOSF_delete_warehouses" parameterType="map">
	<if test="wh_type == 'in'">
	  	DELETE FROM WAREHOUSE_INBOUND WHERE INBOUND_CODE = #{code}
	</if>
	
  <if test="wh_type == 'mt'">
      DELETE FROM WAREHOUSE_MATERIAL WHERE WMT_CODE = #{code}
  </if>
  
  <if test="wh_type == 'fs'">
      DELETE FROM WAREHOUSE_FINISH WHERE WFS_CODE = #{code}
  </if>
  
  <if test="wh_type == 'out'">
      DELETE FROM WAREHOUSE_OUT WHERE OUT_CODE = #{code}
  </if>
  
 </delete>
 
 <!-- 검색된 개시물 총 갯수 -->
 <select id="IOSF_searchTotal" parameterType="map" resultType="int">
      
   <choose>
    <when test="wh_type == 'in'">
		SELECT COUNT(*)
		FROM WAREHOUSE_INB inb
		LEFT JOIN WAREHOUSE w ON TRIM(inb.WH_CODE) = TRIM(w.WH_CODE)
		LEFT JOIN ITM_COMP_VIEW i ON inb.ITEM_CODE = i.ITEM_CODE
		LEFT JOIN INBOUND ib ON inb.INBOUND_CODE = ib.INBOUND_CODE
		WHERE 
		      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
		      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'   
    </when>
    
    
    <when test="wh_type == 'mt'">
     SELECT COUNT(*)
		FROM WAREHOUSE_MATERIAL mt
		LEFT JOIN WAREHOUSE w ON TRIM(mt.WH_CODE) = TRIM(w.WH_CODE)
		LEFT JOIN ITM_COMP_VIEW i ON mt.ITEM_CODE = i.ITEM_CODE
		LEFT JOIN INBOUND ib ON mt.INBOUND_CODE = ib.INBOUND_CODE
		WHERE 
		      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
		      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'   
    </when>
    
    <when test="wh_type == 'fs'">
       SELECT COUNT(*)
		FROM WAREHOUSE_FINISH fs
		LEFT JOIN WAREHOUSE w ON TRIM(fs.WH_CODE) = TRIM(w.WH_CODE)
		LEFT JOIN ITM_COMP_VIEW i ON fs.ITEM_CODE = i.ITEM_CODE
		LEFT JOIN INBOUND ib ON fs.INBOUND_CODE = ib.INBOUND_CODE
		WHERE 
		      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
		      i.COMPANY_NAME LIKE '%' || #{m_search} || '%'   
    </when>
    
    <when test="wh_type == 'out'">
       SELECT COUNT(*)
		FROM WAREHOUSE_OUT out
		LEFT JOIN WAREHOUSE w ON TRIM(out.WH_CODE) = TRIM(w.WH_CODE)
		LEFT JOIN ITM_COMP_VIEW i ON out.ITEM_CODE = i.ITEM_CODE
		LEFT JOIN INBOUND ib ON out.INBOUND_CODE = ib.INBOUND_CODE
		WHERE 
		      w.WH_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_NAME LIKE '%' || #{m_search} || '%' OR
		      i.ITEM_CODE LIKE '%' || #{m_search} || '%' OR
		      i.COMPANY_NAME LIKE '%' || #{m_search} || '%' 
    </when>
    
    <otherwise>
      SELECT 0 FROM DUAL -- 혹은 기본값 처리
    </otherwise>
  </choose>
  </select>
 
 <update id="IOSF_out_update" parameterType="map">
  UPDATE WAREHOUSE_OUT
  SET
    OUT_STATUS = '${outStatus}',
    OUT_UPDATE_DATE = SYSTIMESTAMP
  WHERE WOUT_CODE = '${out_code}' 
 </update>
 
 <!-- 
 <insert id="IOSF_out_complete" parameterType="map">
 	 INSERT INTO OUTBOUND(
 		OIDX,
        OUTBOUND_CODE,
        WOUT_CODE,
        OUT_INSERT_DATE
        
    ) VALUES (
   	    OUTBOUND_NO.NEXTVAL,
        '${wh_uq}',
        '${out_code}',
        SYSTIMESTAMP
    )
 </insert>
  -->







</mapper>