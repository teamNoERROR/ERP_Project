<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.noerror.Mapper.mrp_mapper">

<!-- 검색조건과 페이징 처리를 반영한 데이터 select -->
<select id="plans_period" parameterType="Map" resultType="kr.co.noerror.DTO.prdplan_res_DTO">
SELECT
    pln.*,
    pld.product_qty,
    pld.bom_code,
    ord.due_date,
    pdt.product_name,
    pdt.product_spec,
    pdt.product_unit,
    cmp.company_name,
    emp.ename
FROM production_plan pln
LEFT JOIN production_plan_detail pld ON pln.plan_code = pld.plan_code
LEFT JOIN order_request ord ON pln.order_code = ord.order_code
LEFT JOIN products pdt ON pld.product_code = pdt.product_code
LEFT JOIN client_comp cmp ON pln.company_code = cmp.company_code
LEFT JOIN employee2 emp ON pln.ecode = emp.ecode
WHERE pln.plan_status = '생산계획확정'
  AND pln.mrp_status = '미완료'
  AND pln.end_date BETWEEN #{start_date} AND #{end_date}
ORDER BY pln.pidx DESC
</select>

<!-- MRP 계산을 위해 필요한 데이터를 꺼냄 -->
<select id="boms_for_mrp" parameterType="String" resultType="kr.co.noerror.DTO.bom_DTO">
  SELECT 
  	  bom.item_code, 
  	  itm.item_type,
  	  itm.item_name, 
  	  bom.bom_qty, 
  	  itm.item_unit,
  	  itm.item_cost
  FROM bom bom
  JOIN items itm ON bom.item_code = itm.item_code
  WHERE bom.bom_code = #{bom_code}
</select>

<!-- mrp_code 중복체크 -->
<select id="mrp_code_check" parameterType="String" resultType="int">
 SELECT count(*) FROM mrp_result_header WHERE mrp_code = #{mrp_code}
</select>

<!-- MRP Header 저장 -->
<insert id="insert_mrp_header" parameterType="String">
    INSERT INTO mrp_result_header (mrp_code, mrp_status) VALUES (#{mrp_code}, '발주 미완료')
</insert>

<!-- 요약 저장 (item_code 기준) -->
<insert id="insert_mrp_summary" parameterType="kr.co.noerror.DTO.mrp_result_DTO">
    INSERT INTO mrp_result_detail (
        mrp_code, item_code, required_qty,
        total_stock, safety_stock,reserved_stock,
        available_stock, shortage_stock
    ) VALUES (
        #{mrp_code}, #{item_code}, #{required_qty},
        #{total_stock}, #{safety_stock}, #{reserved_stock},
        #{available_stock}, #{shortage_stock}
    )
</insert>

<!-- 상세 저장 (plan_code + item_code 기준) -->
<insert id="insert_mrp_detail" parameterType="kr.co.noerror.DTO.mrp_result2_DTO">
    INSERT INTO mrp_result_detail2 (
        mrp_code, plan_code, bom_code, item_code, required_qty,
        total_stock, safety_stock, reserved_stock,
        available_stock, shortage_stock
    ) VALUES (
        #{mrp_code}, #{plan_code}, #{bom_code}, #{item_code}, #{required_qty},
        #{total_stock}, #{safety_stock}, #{reserved_stock},
        #{available_stock}, #{shortage_stock}
    )
</insert>

<!-- MRP계산 저장시 production_plan의 mrp_status 업데이트 -->
<update id="update_mrp_status" parameterType="String">
UPDATE production_plan SET mrp_status = '완료' WHERE plan_code = #{plan_code}
</update>

<!--MRP Result Header list -->
<select id="mrp_result_list" resultType="kr.co.noerror.DTO.mrp_result_header_DTO">
SELECT * FROM mrp_result_header WHERE mrp_status = #{mrp_status}
</select>

<!-- 자재 안전재고  --> 
<select id="itm_safe_stock" parameterType="String">
 SELECT itm_safe_stock FROM items WHERE item_code = #{item_code}
</select>

</mapper>